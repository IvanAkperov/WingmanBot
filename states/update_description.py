from aiogram.dispatcher import FSMContext
from aiogram import types
from aiogram.dispatcher.filters.state import StatesGroup, State
from aiogram import Dispatcher
from aiogram.dispatcher.filters import Text
from src.database.main_database import db
from src.keyboards.keyboard_for_users import keyboard


class UpdateDesc(StatesGroup):
    new_desk = State()


async def new_desk(message: types.Message):
    await message.answer("–ü–æ—è–≤–∏–ª–∏—Å—å –Ω–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è –≤ –∂–∏–∑–Ω–∏? –ü–æ—Ä–∞ –æ–± —ç—Ç–æ–º —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å! –ü—Ä–∏—à–ª–∏ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ üòé",
                         reply_markup=keyboard("–û—Ç–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –∏–∑–º–µ–Ω–µ–Ω–∏—è"))
    await UpdateDesc.new_desk.set()


async def process_cancelling_update(message: types.Message, state: FSMContext):
    await message.answer("–í –¥—Ä—É–≥–æ–π —Ä–∞–∑ —Ç–æ–≥–¥–∞!", reply_markup=keyboard("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))
    await state.finish()


async def bad_new_desk(message: types.Message):
    await message.reply("–ß—Ç–æ-—Ç–æ –Ω–µ —Ç—è–Ω–µ—Ç –Ω–∞ —Ç–µ–∫—Å—Ç, –ø—Ä–∏—à–ª–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ.",
                        reply_markup=keyboard("–û—Ç–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –∏–∑–º–µ–Ω–µ–Ω–∏—è"))
    return


async def weak_desc(message: types.Message):
    await message.answer("–ù—É –∂–µ, –æ–ø–∏—à–∏—Ç–µ —Å–µ–±—è –±–æ–ª–µ–µ –∫—Ä–∞—Å–æ—á–Ω–æ!", reply_markup=keyboard("–û—Ç–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –∏–∑–º–µ–Ω–µ–Ω–∏—è"))


async def long_desc(message: types.Message):
    await message.answer("–û–≥–æ-–≥–æ –∫–∞–∫–æ–µ –¥–ª–∏–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ! –°–æ–∫—Ä–∞—Ç–∏—Ç–µ –µ–≥–æ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞",
                         reply_markup=keyboard("–û—Ç–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –∏–∑–º–µ–Ω–µ–Ω–∏—è"))


async def set_new_desk(message: types.Message, state: FSMContext):
    await state.update_data(new_desc=message.text)
    data = await state.get_data()
    db.update_user_desc(user_desc=data['new_desc'], user_id=message.from_user.id)
    await message.reply("–û–ø–∏—Å–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!", reply_markup=keyboard("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))
    await state.finish()


def register_new_description(dp: Dispatcher):
    dp.register_message_handler(new_desk, Text(equals="–û–ø–∏—Å–∞–Ω–∏–µ", ignore_case=True))
    dp.register_message_handler(process_cancelling_update, Text(equals="–û—Ç–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –∏–∑–º–µ–Ω–µ–Ω–∏—è", ignore_case=True),
                                state=UpdateDesc.new_desk)
    dp.register_message_handler(bad_new_desk, lambda msg: not msg.text, state=UpdateDesc.new_desk)
    dp.register_message_handler(weak_desc, lambda weak: len(weak.text.split()) < 3, state=UpdateDesc.new_desk)
    dp.register_message_handler(long_desc, lambda long: len(long.text) > 350, state=UpdateDesc.new_desk)
    dp.register_message_handler(set_new_desk, state=UpdateDesc.new_desk)
